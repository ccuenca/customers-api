# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  name: Azure Pipelines
  vmImage: 'windows-2019'
  demands:
  - msbuild
  - visualstudio

steps:
- task: NuGetToolInstaller@1
  displayName: 'Use NuGet 5.6.0'
  inputs:
    versionSpec: 5.6.0

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '$(Parameters.solution)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: publish
    arguments: '-r linux-x64 --output $(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish API Project'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: ApiDrop
  condition: succeededOrFailed()

- task: DeleteFiles@1
  displayName: 'Delete API Files'
  inputs:
    SourceFolder: '$(build.artifactstagingdirectory)'
    Contents: '**'

- task: VSBuild@1
  displayName: 'Build SQL Project'
  inputs:
    solution: CustomersDB/CustomersDB.sqlproj
    msbuildArgs: ' /p:OutDir="$(build.artifactstagingdirectory)\\" /property:DSP="Microsoft.Data.Tools.Schema.Sql.SqlAzureV12DatabaseSchemaProvider"'
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'
    clean: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish SQL Project'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: SqlDrop
  condition: succeededOrFailed()

- task: DeleteFiles@1
  displayName: 'Delete SQL Files'
  inputs:
    SourceFolder: '$(build.artifactstagingdirectory)'
    Contents: '**'
  enabled: false

- task: PublishSymbols@2
  displayName: 'Publish symbols path'
  inputs:
    SearchPattern: '**\bin\**\*.pdb'
    PublishSymbols: false
  enabled: false
  continueOnError: true